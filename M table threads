class MultiplicationTable extends Thread {
    private int number;

    public MultiplicationTable(int number) {
        this.number = number;
    }

    @Override
    public void run() {
        System.out.println("Multiplication Table for " + number + ":");
        for (int i = 1; i <= 10; i++) {
            System.out.println(number + " x " + i + " = " + (number * i));
            try {
                Thread.sleep(500);
            } catch (InterruptedException e) {
                System.out.println("Thread interrupted: " + e.getMessage());
            }
        }
        System.out.println("Thread for " + number + " completed.");
    }
}

public class R192211091 {
    public static void main(String[] args) {
        MultiplicationTable tableOf5 = new MultiplicationTable(5);
        MultiplicationTable tableOf10 = new MultiplicationTable(10);
        
        tableOf5.start();
        tableOf10.start();
        
        try {
            tableOf5.join();
            tableOf10.join();
        } catch (InterruptedException e) {
            System.out.println("Main thread interrupted: " + e.getMessage());
        }
        
        System.out.println("All threads completed.");
}
}
